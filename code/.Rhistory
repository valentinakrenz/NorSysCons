sjPlot::tab_model(LMM_semDelay)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_MiddleHCEnc3 ~ delay * emotion +
(1+emotion | Name)+(1|stimulusTypeNum), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_MiddleHCEnc3 ~ delay * emotion +
(1+emotion | Name), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_MiddleHCEnc3 ~ delay * emotion +
(1| Name)+(1|stimulusTypeNum), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_MiddleHCEnc3 ~ delay * emotion +
(1| Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelayEmotion)
###sem delay
LMM_semDelay <- lmer(rLeft_MiddleHCEnc3 ~ delay +
(1 | Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelay)
sjPlot::tab_model(LMM_semDelayEmotion)
##glm on FA
###all
gLMM_all <- glmer(FA ~ delay * emotion * lureType * rLeft_MiddleHCEnc3  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_all)
###semxdelay
gLMM_semDelay <- glmer(FA ~ rLeft_MiddleHCEnc3 * delay  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelay)
#semxdelayxemotion
gLMM_semDelayEmotion <- glmer(FA ~ rLeft_MiddleHCEnc3 * delay *emotion  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelayEmotion)
#rLeft_AnteriorHCEnc3#####
##ERS as AV
###all
LMM_all <- lmer(rLeft_AnteriorHCEnc3 ~ delay*lureType*emotion +
(1 | Name), data = ERSlureDat)
sjPlot::tab_model(LMM_all)
###sem delay
LMM_semDelay <- lmer(rLeft_AnteriorHCEnc3 ~ delay +
(1 | Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelay)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_AnteriorHCEnc3 ~ delay * emotion +
(1| Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelayEmotion)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_AnteriorHCEnc3 ~ delay * emotion +
(1| Name)+(1|stimulusTypeNum), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_AnteriorHCEnc3 ~ delay * emotion +
(1+emotion| Name), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_AnteriorHCEnc3 ~ delay * emotion +
(1+rLeft_AnteriorHCEnc3| Name), data = ERSlureDat_sem)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_AnteriorHCEnc3 ~ delay * emotion +
(1| Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelayEmotion)
##glm on FA
###all
gLMM_all <- glmer(FA ~ delay * emotion * lureType * rLeft_AnteriorHCEnc3  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_all)
###sem
gLMM_sem <- glmer(FA ~ rLeft_AnteriorHCEnc3 +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_sem)
###semxdelay
gLMM_semDelay <- glmer(FA ~ rLeft_AnteriorHCEnc3 * delay  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelay)
#semxdelayxemotion
gLMM_semDelayEmotion <- glmer(FA ~ rLeft_AnteriorHCEnc3 * delay *emotion  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelayEmotion)
#rLeft_PosteriorHCEnc3####
##ERS as AV
###all
LMM_all <- lmer(rLeft_PosteriorHCEnc3 ~ delay*lureType*emotion +
(1 | Name), data = ERSlureDat)
sjPlot::tab_model(LMM_all)
#rLeft_PosteriorHCEnc3####
##ERS as AV
###all
LMM_all <- lmer(rLeft_PosteriorHCEnc3 ~ delay*lureType*emotion +
(1 | Name)+(1|stimulusTypeNum), data = ERSlureDat)
#rLeft_PosteriorHCEnc3####
##ERS as AV
###all
LMM_all <- lmer(rLeft_PosteriorHCEnc3 ~ delay*lureType*emotion +
(1+emotion | Name), data = ERSlureDat)
###sem delay
LMM_semDelay <- lmer(rLeft_PosteriorHCEnc3 ~ delay +
(1 | Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelay)
###sem delayxemotion
LMM_semDelayEmotion <- lmer(rLeft_PosteriorHCEnc3 ~ delay * emotion +
(1| Name), data = ERSlureDat_sem)
sjPlot::tab_model(LMM_semDelayEmotion)
##glm on FA
###all
gLMM_all <- glmer(FA ~ delay * emotion * lureType * rLeft_PosteriorHCEnc3  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_all)
###sem
gLMM_sem <- glmer(FA ~ rLeft_PosteriorHCEnc3 +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_sem)
###semxdelay
gLMM_semDelay <- glmer(FA ~ rLeft_PosteriorHCEnc3 * delay  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelay)
#semxdelayxemotion
gLMM_semDelayEmotion <- glmer(FA ~ rLeft_PosteriorHCEnc3 * delay *emotion  +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_semDelayEmotion)
###sem
gLMM_sem <- glmer(FA ~ rLeft_PosteriorHCEnc3 +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
summary(gLMM_sem)
###sem
gLMM_sem <- glmer(FA ~ rLeft_PosteriorHCEnc3 +
(1+emotion | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_sem)
###sem
gLMM_sem <- glmer(FA ~ rLeft_PosteriorHCEnc3 +
(1 | Name) + (1 | stimulusTypeNum), data = ERSlureDat_sem, family = "binomial",
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)),nAGQ=0)
sjPlot::tab_model(gLMM_sem)
#preparation
#load packages
library(readxl)
library(ez)
library(ggplot2)
library(psych)
library(lsr)
library(rstatix)
library(Rmisc)
library(ggpubr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(sjPlot)
#set working directory to source file location
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load wide file data
wide_file <- read_excel('C:/Users/ap2mitarbeiter.AP2-4037/Documents/GitHub/NorSysCons/data/wideFile.xlsx')
#define factos
wide_file$Name <- factor(wide_file$Name)
wide_file$drug <- factor(wide_file$drug)
wide_file$delay <- factor(wide_file$delay)
wide_file$group <- factor(wide_file$group)
#don't use scientific notation for p-values
options(scipen=999)
# explorative analyses of posterior memory storage sites
# t-tests
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$pill==0],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$pill==0])
#load wide file data
wide_file <- read_excel('D:/GitHub/NorSysCons/data/data.xlsx')
#change in precuneal activity from encoding to recognition with SVC
#t-tests
t.test(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$pill==0],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$pill==0])
# explorative analyses of posterior memory storage sites
# t-tests
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
p <- ggplot(data = long_group_recognitionVsEncoding_AngularGyrus, aes(x=drug, y=recognitionVsEncoding_AngularGyrus, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
#theme_classic()+
geom_errorbar(aes(ymin=recognitionVsEncoding_AngularGyrus-se,ymax=recognitionVsEncoding_AngularGyrus+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_AngularGyrus, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
# supplementary figure 3a
long_group_recognitionVsEncoding_AngularGyrus= summarySE(data=wide_file,
measurevar = "recognitionVsEncoding_AngularGyrus",
groupvars = c("delay","drug"))
p <- ggplot(data = long_group_recognitionVsEncoding_AngularGyrus, aes(x=drug, y=recognitionVsEncoding_AngularGyrus, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
#theme_classic()+
geom_errorbar(aes(ymin=recognitionVsEncoding_AngularGyrus-se,ymax=recognitionVsEncoding_AngularGyrus+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_AngularGyrus, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "*", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "*", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
#preparation
#load packages
library(readxl)
library(ez)
library(ggplot2)
library(psych)
library(lsr)
library(rstatix)
library(Rmisc)
library(ggpubr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(sjPlot)
#set working directory to source file location
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load wide file data
wide_file <- read_excel('D:/GitHub/NorSysCons/data/data.xlsx')
#define factos
wide_file$Name <- factor(wide_file$Name)
wide_file$drug <- factor(wide_file$drug)
wide_file$delay <- factor(wide_file$delay)
wide_file$group <- factor(wide_file$group)
#don't use scientific notation for p-values
options(scipen=999)
p <- ggplot(data = long_group_recognitionVsEncoding_Precuneus_ROI, aes(x=drug, y=recognitionVsEncoding_Precuneus_ROI, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=recognitionVsEncoding_Precuneus_ROI-se,ymax=recognitionVsEncoding_Precuneus_ROI+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_Precuneus_ROI, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
# supplementary figure 3a
long_group_recognitionVsEncoding_AngularGyrus= summarySE(data=wide_file,
measurevar = "recognitionVsEncoding_AngularGyrus",
groupvars = c("delay","drug"))
p <- ggplot(data = long_group_recognitionVsEncoding_AngularGyrus, aes(x=drug, y=recognitionVsEncoding_AngularGyrus, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
#theme_classic()+
geom_errorbar(aes(ymin=recognitionVsEncoding_AngularGyrus-se,ymax=recognitionVsEncoding_AngularGyrus+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_AngularGyrus, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "*", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "*", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
#supplementary figure 3b
long_group_recognitionVsEncoding_Precuneus_ROI= summarySE(data=wide_file,
measurevar = "recognitionVsEncoding_Precuneus_ROI",
groupvars = c("delay","drug"))
p <- ggplot(data = long_group_recognitionVsEncoding_Precuneus_ROI, aes(x=drug, y=recognitionVsEncoding_Precuneus_ROI, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=recognitionVsEncoding_Precuneus_ROI-se,ymax=recognitionVsEncoding_Precuneus_ROI+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_Precuneus_ROI, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "***", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "**", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
#change in precuneal activity from encoding to recognition with SVC
#t-tests
t.test(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==1])
p <- ggplot(data = long_group_recognitionVsEncoding_Precuneus_ROI, aes(x=drug, y=recognitionVsEncoding_Precuneus_ROI, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=recognitionVsEncoding_Precuneus_ROI-se,ymax=recognitionVsEncoding_Precuneus_ROI+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_Precuneus_ROI, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "***", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "*", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
pdf("SupplementaryFigure3a.pdf")
p <- ggplot(data = long_group_recognitionVsEncoding_AngularGyrus, aes(x=drug, y=recognitionVsEncoding_AngularGyrus, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
#theme_classic()+
geom_errorbar(aes(ymin=recognitionVsEncoding_AngularGyrus-se,ymax=recognitionVsEncoding_AngularGyrus+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_AngularGyrus, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "*", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "*", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
dev.off()
pdf("SupplementaryFigure3b.pdf")
p <- ggplot(data = long_group_recognitionVsEncoding_Precuneus_ROI, aes(x=drug, y=recognitionVsEncoding_Precuneus_ROI, fill = delay))+
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(aes(ymin=recognitionVsEncoding_Precuneus_ROI-se,ymax=recognitionVsEncoding_Precuneus_ROI+se),
position=position_dodge(0.9),width = 0, size = 1.7)+
geom_point(alpha = 0.15, position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.95),
data=wide_file, aes(y=recognitionVsEncoding_Precuneus_ROI, x=drug, fill=delay), size=3.5)+
labs(x="drug", y = "recognition > encoding (beta)")+
theme_classic()
p + theme_classic() +
scale_x_discrete(labels=c("PLAC", "YOH"))+
scale_fill_manual(name = "delay", labels = c("1d","28d"), values=c("lightsteelblue","lightsteelblue4"))+
scale_shape_manual(values = c(1,10))+
#annotation PLAC 1d vs 28d
annotate("path", x = c(0.8, 1.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 1, y = 0.68, label = "***", size = 13)+
# annotation YOH 1d vs 28d
#line
annotate("path", x = c(1.8, 2.2), y = c(0.65, 0.65), size=1.5) +
# stars !! change accordingly
annotate("text", x = 2, y = 0.68, label = "*", size = 13)+
theme(
axis.title.y=element_text(size=28),
axis.text.y = element_text(size = 26, colour="black"),
axis.title.x=element_text(size=28),
axis.text.x = element_text(size = 28, colour="black"),
legend.title = element_text(size = 28),
legend.text = element_text(size = 26),
axis.line = element_line(size=1.75),
axis.ticks = element_line(size=1.0, colour="black"),
axis.ticks.length = unit(.0,"cm")
)
dev.off()
#change in precuneal activity from encoding to recognition with SVC
#t-tests
t.test(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_Precuneus_ROI[wide_file$delay==1&wide_file$drug==1])
#post-hoc t-tests####
#d1
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="-10min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="-10min"])
#effective manipulation of arousal after encoding####
#drug x delay x time ANOVA on diastolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure),
names_to = "time",
values_to = "diastolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_diastolicBloodpressure", "d1_2_diastolicBloodpressure", "d1_3_diastolicBloodpressure", "d1_4_diastolicBloodpressure", "d1_5_diastolicBloodpressure", "d1_6_diastolicBloodpressure", "d1_7_diastolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#post-hoc t-tests####
#d1
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="-10min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="-10min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="-10min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="-10min"])
#delay x drug x time-ANOVA on systolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure),
names_to = "time",
values_to = "systolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_systolicBloodpressure", "d1_2_systolicBloodpressure", "d1_3_systolicBloodpressure", "d1_4_systolicBloodpressure", "d1_5_systolicBloodpressure", "d1_6_systolicBloodpressure", "d1_7_systolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#post-hoc t-tests####
#T1
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="-10min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="-10min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="-10min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="-10min"])
