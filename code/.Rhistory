wide_file$dPrime[wide_file$delay==0&wide_file$drug==1])
library(lsr)
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
t.test(wide_file$dPrime[wide_file$delay==1&wide_file$drug==0],
wide_file$dPrime[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$dPrime[wide_file$delay==1&wide_file$drug==0],
wide_file$dPrime[wide_file$delay==1&wide_file$drug==1])
t.test(wide_file$oldVsnew_HC[wide_file$delay==1&wide_file$drug==1],
wide_file$oldVsnew_HC[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$oldVsnew_HC[wide_file$delay==1&wide_file$drug==1],
wide_file$oldVsnew_HC[wide_file$delay==1&wide_file$drug==0])
#IFG activity at memory test####
#post-hoc t-tests####
t.test(wide_file$oldVsnew_IFG[wide_file$delay==0&wide_file$drug==0],
wide_file$oldVsnew_IFG[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$oldVsnew_IFG[wide_file$delay==0&wide_file$drug==0],
wide_file$oldVsnew_IFG[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$oldVsnew_IFG[wide_file$delay==0&wide_file$drug==1],
wide_file$oldVsnew_IFG[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$oldVsnew_IFG[wide_file$delay==0&wide_file$drug==1],
wide_file$oldVsnew_IFG[wide_file$delay==1&wide_file$drug==1])
#Increase in IFG-activity during memory testing correlates significantly negative with memory performance####
#correlation between IFG and dPrime####
cor <- cor.test(wide_file$dPrime,
wide_file$oldVsnew_IFG)
print(cor)
#Recognition vs Encoding####
#post-hoc-t-tests####
t.test(wide_file$recognitionVsEncoding_IFG[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_IFG[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$recognitionVsEncoding_IFG[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_IFG[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_IFG[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_IFG[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_IFG[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_IFG[wide_file$delay==1&wide_file$drug==1])
#whole brain level####
#Precuneus post-hoc t-tests
t.test(wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_Precuneus[wide_file$delay==1&wide_file$drug==1])
#noradrenergic stimulation reverses the time-dependent changes in IFG-hippocampus connectivity ####
#post hoc t-tests####
t.test(wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$PPI_oldVsnew_seedIFG_HC[wide_file$delay==1&wide_file$drug==1])
#noradrenergic stimulation increases pattern reinstatement in the hippocampus over time####
#trial-unique ERS####
#post-hoc t-tests#####
t.test(wide_file$ERS_trialUnique_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$ERS_trialUnique_HC[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$ERS_trialUnique_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$ERS_trialUnique_HC[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$ERS_trialUnique_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$ERS_trialUnique_HC[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$ERS_trialUnique_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$ERS_trialUnique_HC[wide_file$delay==1&wide_file$drug==1])
#cross-trial ERS####
#t-tests####
t.test(wide_file$ERS_crossTrial_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$ERS_crossTrial_HC[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$ERS_crossTrial_HC[wide_file$delay==0&wide_file$drug==0],
wide_file$ERS_crossTrial_HC[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$ERS_crossTrial_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$ERS_crossTrial_HC[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$ERS_crossTrial_HC[wide_file$delay==0&wide_file$drug==1],
wide_file$ERS_crossTrial_HC[wide_file$delay==1&wide_file$drug==1])
# exploratory analyses of posterior areas
# t-tests
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==0])
cohensD(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==0],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==0])
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
t.test(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
cohensD(wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==0&wide_file$drug==1],
wide_file$recognitionVsEncoding_AngularGyrus[wide_file$delay==1&wide_file$drug==1])
library(readxl) #importing data
library(ez) #ANOVA
library(ggplot2) #graphs
library(Rmisc) #necessary for SE within bus masks rename (and other functions from dplyr)
library(ggpubr)
library(tidyverse) #prepare data #needs to be loaded after Rmisc
library(lme4) #fÃ¼r lmer / glmer -> mixed effects model
library(lmerTest) #show p_values in mixed effetcs model
library(cowplot) #for crazy scatterplots with boxplots
library(psych)
library(lsr) #for cohensDlibrary(sjPlot)#plots for (g)lmer
library(multilevelTools)
#library(extraoperators)
#library(JWileymisc)
library(heplots)#for etasquare in ezANOVA
library(plotrix)
library(rstatix)
library(sjPlot)#maskes plot_grid and save_plot from cowplot
options(scipen=999) #don't use scientific notation for p-values
#set working directory to source file location
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
###prepare wide file data####
wide_file <- read_excel('M:/Valentina/fmri_analysis/BehavAll.xlsx') # read file
wide_file$Name <- factor(wide_file$Name)
wide_file$pill <- factor(wide_file$pill)
wide_file$delay <- factor(wide_file$delay)
wide_file$allGroups <- factor(wide_file$allGroups)
#dprime with factor gender####
##with emotion
long_file <- wide_file %>%
select(Name, pill, gender, delay, dPrime_neu_onlyNewFA_adj, dPrime_neg_onlyNewFA_adj) %>%
pivot_longer(cols = c(dPrime_neu_onlyNewFA_adj, dPrime_neg_onlyNewFA_adj),
names_to = "Emotion",
values_to = "dPrime")
#name levels of Emotion
long_file$Emotion <- factor(long_file$Emotion, levels = c("dPrime_neu_onlyNewFA_adj", "dPrime_neg_onlyNewFA_adj"),
labels = c("neutral","negative"))
#rename levels/ groups for plots
levels(long_file$pill)[levels(long_file$pill)=="0"] <- "PLAC"
levels(long_file$pill)[levels(long_file$pill)=="1"] <- "YOH"
names(long_file)[names(long_file)=="pill"]  <- "drug"
levels(long_file$delay)[levels(long_file$delay)=="0"] <- "1d"
levels(long_file$delay)[levels(long_file$delay)=="1"] <- "28d"
levels(long_file$gender)[levels(long_file$gender)=="0"] <- "female"
levels(long_file$gender)[levels(long_file$gender)=="1"] <- "male"
names(long_file)[names(long_file)=="gender"]  <- "gender"
#run LMM
dPrime_GLM <- lmer(dPrime ~ gender*delay*drug*Emotion +
(1 | Name), data = long_file)
#run reduced LMM
dPrime_GLM_reduced <- lmer(dPrime ~
gender+ delay+ drug+ Emotion +
delay:Emotion+ delay:drug + delay:drug:Emotion+ drug:Emotion+
gender:delay:drug
(1 | Name), data = long_file)
#show results
summary(dPrime_GLM_reduced)
names(long_file)[names(long_file)=="pill"]  <- "drug"
#run LMM
dPrime_GLM <- lmer(dPrime ~ gender*delay*drug*Emotion +
(1 | Name), data = long_file)
summary(dPrime_GLM)
# gLMM on confidence in hits ####
#describe(wide_file$FreeRecall_Score)
##PREPARE DATA
oldsFull_file <- read_excel('M:/Valentina/fmri_analysis/longFile_BehavAll_olds.xlsx') # read long-file with all behav measures + free recall-measure
##choose only certain columns for analysis
hit_confidency_file <- oldsFull_file %>%
select(Name, pill, delay, emotion, stimulusTypeNum, hit_confidency)
##define factors
olds_file$Name <- factor(hit_confidency_file$Name)
##define factors
hit_confidency_file$Name <- factor(hit_confidency_file$Name)
hit_confidency_file$pill <- factor(hit_confidency_file$pill)
hit_confidency_file$delay <- factor(hit_confidency_file$delay)
hit_confidency_file$stimulusTypeNum <- factor(hit_confidency_file$stimulusTypeNum)
##define order of emotion-levels, so negative will be contrasted against neutral
hit_confidency_file$emotion <- factor(hit_confidency_file$emotion, levels=c("Neu","Neg"))
#rename levels/ groups for plots
levels(hit_confidency_file$pill)[levels(hit_confidency_file$pill)=="0"] <- "PLAC"
levels(hit_confidency_file$pill)[levels(hit_confidency_file$pill)=="1"] <- "YOH"
names(hit_confidency_file)[names(hit_confidency_file)=="pill"]  <- "drug"
levels(hit_confidency_file$delay)[levels(hit_confidency_file$delay)=="0"] <- "1d"
levels(hit_confidency_file$delay)[levels(hit_confidency_file$delay)=="1"] <- "28d"
#rename levels/ groups for plots
levels(hit_confidency_file$emotion)[levels(hit_confidency_file$emotion)=="Neg"] <- "negative"
levels(hit_confidency_file$emotion)[levels(hit_confidency_file$emotion)=="Neut"] <- "neutral"
names(hit_confidency_file)[names(hit_confidency_file)=="emotion"]  <- "emotion"
#without optimizers
hit_confidency_glmm <- glmer(hit_confidency ~ drug * delay * emotion +
(1 | Name) + (1 | stimulusTypeNum), data = hit_confidency_file, family = "binomial")
##define factors
hit_confidency_file$Name <- factor(hit_confidency_file$Name)
hit_confidency_file$pill <- factor(hit_confidency_file$pill)
hit_confidency_file$delay <- factor(hit_confidency_file$delay)
hit_confidency_file$stimulusTypeNum <- factor(hit_confidency_file$stimulusTypeNum)
hit_confidency_file$pill <- factor(hit_confidency_file$pill)
hit_confidency_file$drug <- factor(hit_confidency_file$drug)
#without optimizers
hit_confidency_glmm <- glmer(hit_confidency ~ drug * delay * emotion +
(1 | Name) + (1 | stimulusTypeNum), data = hit_confidency_file, family = "binomial")
# gLMM on confidence in hits ####
#describe(wide_file$FreeRecall_Score)
##PREPARE DATA
oldsFull_file <- read_excel('M:/Valentina/fmri_analysis/longFile_BehavAll_olds.xlsx') # read long-file with all behav measures + free recall-measure
##choose only certain columns for analysis
hit_confidency_file <- oldsFull_file %>%
select(Name, pill, delay, emotion, stimulusTypeNum, hit_confidency)
hit_confidency_file$drug <- factor(hit_confidency_file$pill)
hit_confidency_file$delay <- factor(hit_confidency_file$delay)
hit_confidency_file$stimulusTypeNum <- factor(hit_confidency_file$stimulusTypeNum)
##define order of emotion-levels, so negative will be contrasted against neutral
hit_confidency_file$emotion <- factor(hit_confidency_file$emotion, levels=c("Neu","Neg"))
#rename levels/ groups for plots
levels(hit_confidency_file$pill)[levels(hit_confidency_file$pill)=="0"] <- "PLAC"
levels(hit_confidency_file$pill)[levels(hit_confidency_file$pill)=="1"] <- "YOH"
levels(hit_confidency_file$delay)[levels(hit_confidency_file$delay)=="0"] <- "1d"
levels(hit_confidency_file$delay)[levels(hit_confidency_file$delay)=="1"] <- "28d"
#rename levels/ groups for plots
levels(hit_confidency_file$emotion)[levels(hit_confidency_file$emotion)=="Neg"] <- "negative"
levels(hit_confidency_file$emotion)[levels(hit_confidency_file$emotion)=="Neut"] <- "neutral"
#without optimizers
hit_confidency_glmm <- glmer(hit_confidency ~ drug * delay * emotion +
(1 | Name) + (1 | stimulusTypeNum), data = hit_confidency_file, family = "binomial")
#preparation
#load packages
library(readxl)
library(ez)
library(ggplot2)
library(psych)
library(lsr)
library(rstatix)
library(Rmisc)
library(ggpubr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(sjPlot)
#set working directory to source file location
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load wide file data
wide_file <- read_excel('D:/GitHub/NorSysCons/data/data.xlsx')
#define factos
wide_file$Name <- factor(wide_file$Name)
wide_file$drug <- factor(wide_file$drug)
wide_file$delay <- factor(wide_file$delay)
wide_file$group <- factor(wide_file$group)
#don't use scientific notation for p-values
options(scipen=999)
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure),
names_to = "time",
values_to = "diastolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_diastolicBloodpressure", "d1_2_diastolicBloodpressure", "d1_3_diastolicBloodpressure", "d1_4_diastolicBloodpressure", "d1_5_diastolicBloodpressure", "d1_6_diastolicBloodpressure", "d1_7_diastolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#run anova
results <- ezANOVA(data=long_file, dv=diastolicBloodpressure, wid=Name, within=time, between = c(drug,delay), detailed = TRUE, return_aov=TRUE)
print(results)
#show partial eta square
results<- aovEffectSize(results, effectSize = "pes")
aovDispTable(results)
library(psychReport)
results<- aovEffectSize(results, effectSize = "pes")
aovDispTable(results)
#run anova
results <- ezANOVA(data=long_file, dv=diastolicBloodpressure, wid=Name, within=time, between = c(drug,delay), detailed = TRUE, return_aov=TRUE)
print(results)
library(psychReport)
results<- aovEffectSize(results, effectSize = "pes")
aovDispTable(results)
#T2
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
#T2
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
#delay x drug x time-ANOVA on systolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure),
names_to = "time",
values_to = "systolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_systolicBloodpressure", "d1_2_systolicBloodpressure", "d1_3_systolicBloodpressure", "d1_4_systolicBloodpressure", "d1_5_systolicBloodpressure", "d1_6_systolicBloodpressure", "d1_7_systolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#run anova
results <- ezANOVA(data=long_file, dv=systolicBloodpressure, wid=Name, within=time, between = c(drug,delay), detailed = TRUE, return_aov=TRUE)
print(results)
#T2
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
#T5
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#T6
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
#T7
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
#T5
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#effective manipulation of arousal after encoding####
#drug x delay x time ANOVA on diastolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure),
names_to = "time",
values_to = "diastolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_diastolicBloodpressure", "d1_2_diastolicBloodpressure", "d1_3_diastolicBloodpressure", "d1_4_diastolicBloodpressure", "d1_5_diastolicBloodpressure", "d1_6_diastolicBloodpressure", "d1_7_diastolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#T5
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#T6
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
#T7
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
#delay x drug x emotion LMM on dPrime####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, dPrime_neutral, dPrime_negative) %>%
pivot_longer(cols = c(dPrime_neutral, dPrime_negative),
names_to = "Emotion",
values_to = "dPrime")
#name levels of Emotion
long_file$Emotion <- factor(long_file$Emotion, levels = c("dPrime_neutral", "dPrime_negative"),
labels = c("neutral","negative"))
#rename levels/ groups for plots
levels(long_file$drug)[levels(long_file$drug)=="0"] <- "PLAC"
levels(long_file$drug)[levels(long_file$drug)=="1"] <- "YOH"
levels(long_file$delay)[levels(long_file$delay)=="0"] <- "1d"
levels(long_file$delay)[levels(long_file$delay)=="1"] <- "28d"
#run LMM
dPrime_GLM <- lmer(dPrime ~ delay*drug*Emotion +
(1 | Name), data = long_file)
#show results (for t-value)
summary(dPrime_GLM)
#show results (for CI)
sjPlot::tab_model(dPrime_GLM)
#get trial-wise long-file
freeRecall_file <- read_excel('D:/GitHub/NorSysCons/data/longFile_FreeRecall.xlsx') # read in prepared long_file for free Recall
#define factors
freeRecall_file$Name <- factor(freeRecall_file$Name)
freeRecall_file$drug <- factor(freeRecall_file$drug)
freeRecall_file$delay <- factor(freeRecall_file$delay)
freeRecall_file$stimulusTypeNum <- factor(freeRecall_file$stimulusTypeNum)
#define order of emotion-levels, so negative will be contrasted against neutral
freeRecall_file$emotion <- factor(freeRecall_file$emotion, levels=c("Neut","Neg"))
#rename levels/ groups for plots
levels(freeRecall_file$drug)[levels(freeRecall_file$drug)=="0"] <- "PLAC"
levels(freeRecall_file$drug)[levels(freeRecall_file$drug)=="1"] <- "YOH"
levels(freeRecall_file$delay)[levels(freeRecall_file$delay)=="0"] <- "1d"
levels(freeRecall_file$delay)[levels(freeRecall_file$delay)=="1"] <- "28d"
#rename levels/ groups for plots
levels(freeRecall_file$emotion)[levels(freeRecall_file$emotion)=="Neg"] <- "negative"
levels(freeRecall_file$emotion)[levels(freeRecall_file$emotion)=="Neut"] <- "neutral"
#run LMM
freeRecall_glmm <- glmer(freeRecall ~ drug * delay * emotion +
(1 | Name) + (1 | stimulusTypeNum), data = freeRecall_file, family = "binomial")
summary(freeRecall_glmm)
sjPlot::tab_model(freeRecall_glmm)
#delay x drug x emotion LMM on dPrime####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, dPrime_neutral, dPrime_negative) %>%
pivot_longer(cols = c(dPrime_neutral, dPrime_negative),
names_to = "Emotion",
values_to = "dPrime")
#name levels of Emotion
long_file$Emotion <- factor(long_file$Emotion, levels = c("dPrime_neutral", "dPrime_negative"),
labels = c("neutral","negative"))
#rename levels/ groups for plots
levels(long_file$drug)[levels(long_file$drug)=="0"] <- "PLAC"
levels(long_file$drug)[levels(long_file$drug)=="1"] <- "YOH"
levels(long_file$delay)[levels(long_file$delay)=="0"] <- "1d"
levels(long_file$delay)[levels(long_file$delay)=="1"] <- "28d"
#run LMM
dPrime_GLM <- lmer(dPrime ~ delay*drug*Emotion +
(1 | Name), data = long_file)
#show results (for t-value)
summary(dPrime_GLM)
#show results (for CI)
sjPlot::tab_model(dPrime_GLM)
#load wide file data
wide_file <- read_excel('D:/GitHub/NorSysCons/data/data.xlsx')
#define factos
wide_file$Name <- factor(wide_file$Name)
wide_file$drug <- factor(wide_file$drug)
wide_file$delay <- factor(wide_file$delay)
wide_file$group <- factor(wide_file$group)
#don't use scientific notation for p-values
options(scipen=999)
#effective manipulation of arousal after encoding####
#drug x delay x time ANOVA on diastolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure),
names_to = "time",
values_to = "diastolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_diastolicBloodpressure", "d1_2_diastolicBloodpressure", "d1_3_diastolicBloodpressure", "d1_4_diastolicBloodpressure", "d1_5_diastolicBloodpressure", "d1_6_diastolicBloodpressure", "d1_7_diastolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#run anova
results <- ezANOVA(data=long_file, dv=diastolicBloodpressure, wid=Name, within=time, between = c(drug,delay), detailed = TRUE, return_aov=TRUE)
print(results)
#show partial eta square
results<- aovEffectSize(results, effectSize = "pes")
aovDispTable(results)
#delay x drug x time-ANOVA on systolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_systolicBloodpressure, d1_2_systolicBloodpressure, d1_3_systolicBloodpressure, d1_4_systolicBloodpressure, d1_5_systolicBloodpressure, d1_6_systolicBloodpressure, d1_7_systolicBloodpressure),
names_to = "time",
values_to = "systolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_systolicBloodpressure", "d1_2_systolicBloodpressure", "d1_3_systolicBloodpressure", "d1_4_systolicBloodpressure", "d1_5_systolicBloodpressure", "d1_6_systolicBloodpressure", "d1_7_systolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#run anova
results <- ezANOVA(data=long_file, dv=systolicBloodpressure, wid=Name, within=time, between = c(drug,delay), detailed = TRUE, return_aov=TRUE)
print(results)
#report partial eta squared
library(psychReport)
results<- aovEffectSize(results, effectSize = "pes")
aovDispTable(results)
#T2
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="35min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="35min"])
#T5
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#T6
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
#T7
t.test(x = long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
y = long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
cohensD(long_file$systolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$systolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
#T5
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#T6
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
#T7
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
#effective manipulation of arousal after encoding####
#drug x delay x time ANOVA on diastolic blood pressure####
#prepare long_file
long_file <- wide_file %>%
select(Name, drug, delay, d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure) %>%
drop_na() %>%
pivot_longer(cols = c(d1_1_diastolicBloodpressure, d1_2_diastolicBloodpressure, d1_3_diastolicBloodpressure, d1_4_diastolicBloodpressure, d1_5_diastolicBloodpressure, d1_6_diastolicBloodpressure, d1_7_diastolicBloodpressure),
names_to = "time",
values_to = "diastolicBloodpressure")
#rename av-levels and define av
long_file$time <- factor(long_file$time, levels = c("d1_1_diastolicBloodpressure", "d1_2_diastolicBloodpressure", "d1_3_diastolicBloodpressure", "d1_4_diastolicBloodpressure", "d1_5_diastolicBloodpressure", "d1_6_diastolicBloodpressure", "d1_7_diastolicBloodpressure"),
labels = c("-10min", "35min", "55min", "70min", "85min", "100min", "115min"))
#T5
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="85min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="85min"])
#T6
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="100min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="100min"])
#T7
t.test(x = long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
y = long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
cohensD(long_file$diastolicBloodpressure[long_file$drug ==1 & long_file$time=="115min"],
long_file$diastolicBloodpressure[long_file$drug ==0 & long_file$time=="115min"])
